/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the RewardResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RewardResponseBody{}

// RewardResponseBody struct for RewardResponseBody
type RewardResponseBody struct {
	Reward *RewardResponse `json:"reward,omitempty"`
}

// NewRewardResponseBody instantiates a new RewardResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRewardResponseBody() *RewardResponseBody {
	this := RewardResponseBody{}
	return &this
}

// NewRewardResponseBodyWithDefaults instantiates a new RewardResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRewardResponseBodyWithDefaults() *RewardResponseBody {
	this := RewardResponseBody{}
	return &this
}

// GetReward returns the Reward field value if set, zero value otherwise.
func (o *RewardResponseBody) GetReward() RewardResponse {
	if o == nil || IsNil(o.Reward) {
		var ret RewardResponse
		return ret
	}
	return *o.Reward
}

// GetRewardOk returns a tuple with the Reward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardResponseBody) GetRewardOk() (*RewardResponse, bool) {
	if o == nil || IsNil(o.Reward) {
		return nil, false
	}
	return o.Reward, true
}

// HasReward returns a boolean if a field has been set.
func (o *RewardResponseBody) HasReward() bool {
	if o != nil && !IsNil(o.Reward) {
		return true
	}

	return false
}

// SetReward gets a reference to the given RewardResponse and assigns it to the Reward field.
func (o *RewardResponseBody) SetReward(v RewardResponse) {
	o.Reward = &v
}

func (o RewardResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RewardResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reward) {
		toSerialize["reward"] = o.Reward
	}
	return toSerialize, nil
}

type NullableRewardResponseBody struct {
	value *RewardResponseBody
	isSet bool
}

func (v NullableRewardResponseBody) Get() *RewardResponseBody {
	return v.value
}

func (v *NullableRewardResponseBody) Set(val *RewardResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRewardResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRewardResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRewardResponseBody(val *RewardResponseBody) *NullableRewardResponseBody {
	return &NullableRewardResponseBody{value: val, isSet: true}
}

func (v NullableRewardResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRewardResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


