/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the RewardsResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RewardsResponseBody{}

// RewardsResponseBody struct for RewardsResponseBody
type RewardsResponseBody struct {
	Rewards []RewardsResponse `json:"rewards,omitempty"`
	Pagination *PaginationResponse `json:"pagination,omitempty"`
}

// NewRewardsResponseBody instantiates a new RewardsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRewardsResponseBody() *RewardsResponseBody {
	this := RewardsResponseBody{}
	return &this
}

// NewRewardsResponseBodyWithDefaults instantiates a new RewardsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRewardsResponseBodyWithDefaults() *RewardsResponseBody {
	this := RewardsResponseBody{}
	return &this
}

// GetRewards returns the Rewards field value if set, zero value otherwise.
func (o *RewardsResponseBody) GetRewards() []RewardsResponse {
	if o == nil || IsNil(o.Rewards) {
		var ret []RewardsResponse
		return ret
	}
	return o.Rewards
}

// GetRewardsOk returns a tuple with the Rewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardsResponseBody) GetRewardsOk() ([]RewardsResponse, bool) {
	if o == nil || IsNil(o.Rewards) {
		return nil, false
	}
	return o.Rewards, true
}

// HasRewards returns a boolean if a field has been set.
func (o *RewardsResponseBody) HasRewards() bool {
	if o != nil && !IsNil(o.Rewards) {
		return true
	}

	return false
}

// SetRewards gets a reference to the given []RewardsResponse and assigns it to the Rewards field.
func (o *RewardsResponseBody) SetRewards(v []RewardsResponse) {
	o.Rewards = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *RewardsResponseBody) GetPagination() PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardsResponseBody) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *RewardsResponseBody) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationResponse and assigns it to the Pagination field.
func (o *RewardsResponseBody) SetPagination(v PaginationResponse) {
	o.Pagination = &v
}

func (o RewardsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RewardsResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rewards) {
		toSerialize["rewards"] = o.Rewards
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableRewardsResponseBody struct {
	value *RewardsResponseBody
	isSet bool
}

func (v NullableRewardsResponseBody) Get() *RewardsResponseBody {
	return v.value
}

func (v *NullableRewardsResponseBody) Set(val *RewardsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRewardsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRewardsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRewardsResponseBody(val *RewardsResponseBody) *NullableRewardsResponseBody {
	return &NullableRewardsResponseBody{value: val, isSet: true}
}

func (v NullableRewardsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRewardsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


