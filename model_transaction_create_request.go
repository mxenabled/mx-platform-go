/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the TransactionCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionCreateRequest{}

// TransactionCreateRequest struct for TransactionCreateRequest
type TransactionCreateRequest struct {
	Amount float32 `json:"amount"`
	Date string `json:"date"`
	Description string `json:"description"`
	// The type of transaction, which must be CREDIT or DEBIT. See Transaction Fields for more information.
	Type string `json:"type"`
	// Unique identifier of the category.
	CategoryGuid *string `json:"category_guid,omitempty"`
	CurrencyCode *string `json:"currency_code,omitempty"`
	HasBeenViewed *bool `json:"has_been_viewed,omitempty"`
	IsHidden *bool `json:"is_hidden,omitempty"`
	IsInternational *bool `json:"is_international,omitempty"`
	Memo *string `json:"memo,omitempty"`
	Metadata *string `json:"metadata,omitempty"`
	// When set to true, this parameter will prevent a webhook from being triggered by the request.
	SkipWebhook *bool `json:"skip_webhook,omitempty"`
}

// NewTransactionCreateRequest instantiates a new TransactionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionCreateRequest(amount float32, date string, description string, type_ string) *TransactionCreateRequest {
	this := TransactionCreateRequest{}
	this.Amount = amount
	this.Date = date
	this.Description = description
	this.Type = type_
	return &this
}

// NewTransactionCreateRequestWithDefaults instantiates a new TransactionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionCreateRequestWithDefaults() *TransactionCreateRequest {
	this := TransactionCreateRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *TransactionCreateRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactionCreateRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetDate returns the Date field value
func (o *TransactionCreateRequest) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *TransactionCreateRequest) SetDate(v string) {
	o.Date = v
}

// GetDescription returns the Description field value
func (o *TransactionCreateRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *TransactionCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetType returns the Type field value
func (o *TransactionCreateRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransactionCreateRequest) SetType(v string) {
	o.Type = v
}

// GetCategoryGuid returns the CategoryGuid field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetCategoryGuid() string {
	if o == nil || IsNil(o.CategoryGuid) {
		var ret string
		return ret
	}
	return *o.CategoryGuid
}

// GetCategoryGuidOk returns a tuple with the CategoryGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetCategoryGuidOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryGuid) {
		return nil, false
	}
	return o.CategoryGuid, true
}

// HasCategoryGuid returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasCategoryGuid() bool {
	if o != nil && !IsNil(o.CategoryGuid) {
		return true
	}

	return false
}

// SetCategoryGuid gets a reference to the given string and assigns it to the CategoryGuid field.
func (o *TransactionCreateRequest) SetCategoryGuid(v string) {
	o.CategoryGuid = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *TransactionCreateRequest) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetHasBeenViewed returns the HasBeenViewed field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetHasBeenViewed() bool {
	if o == nil || IsNil(o.HasBeenViewed) {
		var ret bool
		return ret
	}
	return *o.HasBeenViewed
}

// GetHasBeenViewedOk returns a tuple with the HasBeenViewed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetHasBeenViewedOk() (*bool, bool) {
	if o == nil || IsNil(o.HasBeenViewed) {
		return nil, false
	}
	return o.HasBeenViewed, true
}

// HasHasBeenViewed returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasHasBeenViewed() bool {
	if o != nil && !IsNil(o.HasBeenViewed) {
		return true
	}

	return false
}

// SetHasBeenViewed gets a reference to the given bool and assigns it to the HasBeenViewed field.
func (o *TransactionCreateRequest) SetHasBeenViewed(v bool) {
	o.HasBeenViewed = &v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetIsHidden() bool {
	if o == nil || IsNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetIsHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHidden) {
		return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasIsHidden() bool {
	if o != nil && !IsNil(o.IsHidden) {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *TransactionCreateRequest) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetIsInternational returns the IsInternational field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetIsInternational() bool {
	if o == nil || IsNil(o.IsInternational) {
		var ret bool
		return ret
	}
	return *o.IsInternational
}

// GetIsInternationalOk returns a tuple with the IsInternational field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetIsInternationalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInternational) {
		return nil, false
	}
	return o.IsInternational, true
}

// HasIsInternational returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasIsInternational() bool {
	if o != nil && !IsNil(o.IsInternational) {
		return true
	}

	return false
}

// SetIsInternational gets a reference to the given bool and assigns it to the IsInternational field.
func (o *TransactionCreateRequest) SetIsInternational(v bool) {
	o.IsInternational = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *TransactionCreateRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *TransactionCreateRequest) SetMetadata(v string) {
	o.Metadata = &v
}

// GetSkipWebhook returns the SkipWebhook field value if set, zero value otherwise.
func (o *TransactionCreateRequest) GetSkipWebhook() bool {
	if o == nil || IsNil(o.SkipWebhook) {
		var ret bool
		return ret
	}
	return *o.SkipWebhook
}

// GetSkipWebhookOk returns a tuple with the SkipWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCreateRequest) GetSkipWebhookOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipWebhook) {
		return nil, false
	}
	return o.SkipWebhook, true
}

// HasSkipWebhook returns a boolean if a field has been set.
func (o *TransactionCreateRequest) HasSkipWebhook() bool {
	if o != nil && !IsNil(o.SkipWebhook) {
		return true
	}

	return false
}

// SetSkipWebhook gets a reference to the given bool and assigns it to the SkipWebhook field.
func (o *TransactionCreateRequest) SetSkipWebhook(v bool) {
	o.SkipWebhook = &v
}

func (o TransactionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["date"] = o.Date
	toSerialize["description"] = o.Description
	toSerialize["type"] = o.Type
	if !IsNil(o.CategoryGuid) {
		toSerialize["category_guid"] = o.CategoryGuid
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if !IsNil(o.HasBeenViewed) {
		toSerialize["has_been_viewed"] = o.HasBeenViewed
	}
	if !IsNil(o.IsHidden) {
		toSerialize["is_hidden"] = o.IsHidden
	}
	if !IsNil(o.IsInternational) {
		toSerialize["is_international"] = o.IsInternational
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.SkipWebhook) {
		toSerialize["skip_webhook"] = o.SkipWebhook
	}
	return toSerialize, nil
}

type NullableTransactionCreateRequest struct {
	value *TransactionCreateRequest
	isSet bool
}

func (v NullableTransactionCreateRequest) Get() *TransactionCreateRequest {
	return v.value
}

func (v *NullableTransactionCreateRequest) Set(val *TransactionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionCreateRequest(val *TransactionCreateRequest) *NullableTransactionCreateRequest {
	return &NullableTransactionCreateRequest{value: val, isSet: true}
}

func (v NullableTransactionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


