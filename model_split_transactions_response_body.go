/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the SplitTransactionsResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SplitTransactionsResponseBody{}

// SplitTransactionsResponseBody struct for SplitTransactionsResponseBody
type SplitTransactionsResponseBody struct {
	Transactions []TransactionResponse `json:"transactions,omitempty"`
}

// NewSplitTransactionsResponseBody instantiates a new SplitTransactionsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSplitTransactionsResponseBody() *SplitTransactionsResponseBody {
	this := SplitTransactionsResponseBody{}
	return &this
}

// NewSplitTransactionsResponseBodyWithDefaults instantiates a new SplitTransactionsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSplitTransactionsResponseBodyWithDefaults() *SplitTransactionsResponseBody {
	this := SplitTransactionsResponseBody{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *SplitTransactionsResponseBody) GetTransactions() []TransactionResponse {
	if o == nil || IsNil(o.Transactions) {
		var ret []TransactionResponse
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SplitTransactionsResponseBody) GetTransactionsOk() ([]TransactionResponse, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *SplitTransactionsResponseBody) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []TransactionResponse and assigns it to the Transactions field.
func (o *SplitTransactionsResponseBody) SetTransactions(v []TransactionResponse) {
	o.Transactions = v
}

func (o SplitTransactionsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SplitTransactionsResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableSplitTransactionsResponseBody struct {
	value *SplitTransactionsResponseBody
	isSet bool
}

func (v NullableSplitTransactionsResponseBody) Get() *SplitTransactionsResponseBody {
	return v.value
}

func (v *NullableSplitTransactionsResponseBody) Set(val *SplitTransactionsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSplitTransactionsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSplitTransactionsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSplitTransactionsResponseBody(val *SplitTransactionsResponseBody) *NullableSplitTransactionsResponseBody {
	return &NullableSplitTransactionsResponseBody{value: val, isSet: true}
}

func (v NullableSplitTransactionsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSplitTransactionsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


