/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the BudgetUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BudgetUpdateRequest{}

// BudgetUpdateRequest struct for BudgetUpdateRequest
type BudgetUpdateRequest struct {
	// Amount of the budget.
	Amount *int32 `json:"amount,omitempty"`
	// Additional information a partner can store on the budget.
	Metadata *string `json:"metadata,omitempty"`
	// When set to true, this parameter will prevent a webhook from being triggered by the request.
	SkipWebhook *bool `json:"skip_webhook,omitempty"`
}

// NewBudgetUpdateRequest instantiates a new BudgetUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBudgetUpdateRequest() *BudgetUpdateRequest {
	this := BudgetUpdateRequest{}
	return &this
}

// NewBudgetUpdateRequestWithDefaults instantiates a new BudgetUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBudgetUpdateRequestWithDefaults() *BudgetUpdateRequest {
	this := BudgetUpdateRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BudgetUpdateRequest) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetUpdateRequest) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BudgetUpdateRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *BudgetUpdateRequest) SetAmount(v int32) {
	o.Amount = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BudgetUpdateRequest) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetUpdateRequest) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BudgetUpdateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *BudgetUpdateRequest) SetMetadata(v string) {
	o.Metadata = &v
}

// GetSkipWebhook returns the SkipWebhook field value if set, zero value otherwise.
func (o *BudgetUpdateRequest) GetSkipWebhook() bool {
	if o == nil || IsNil(o.SkipWebhook) {
		var ret bool
		return ret
	}
	return *o.SkipWebhook
}

// GetSkipWebhookOk returns a tuple with the SkipWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BudgetUpdateRequest) GetSkipWebhookOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipWebhook) {
		return nil, false
	}
	return o.SkipWebhook, true
}

// HasSkipWebhook returns a boolean if a field has been set.
func (o *BudgetUpdateRequest) HasSkipWebhook() bool {
	if o != nil && !IsNil(o.SkipWebhook) {
		return true
	}

	return false
}

// SetSkipWebhook gets a reference to the given bool and assigns it to the SkipWebhook field.
func (o *BudgetUpdateRequest) SetSkipWebhook(v bool) {
	o.SkipWebhook = &v
}

func (o BudgetUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BudgetUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.SkipWebhook) {
		toSerialize["skip_webhook"] = o.SkipWebhook
	}
	return toSerialize, nil
}

type NullableBudgetUpdateRequest struct {
	value *BudgetUpdateRequest
	isSet bool
}

func (v NullableBudgetUpdateRequest) Get() *BudgetUpdateRequest {
	return v.value
}

func (v *NullableBudgetUpdateRequest) Set(val *BudgetUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBudgetUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBudgetUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBudgetUpdateRequest(val *BudgetUpdateRequest) *NullableBudgetUpdateRequest {
	return &NullableBudgetUpdateRequest{value: val, isSet: true}
}

func (v NullableBudgetUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBudgetUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


