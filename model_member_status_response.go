/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the MemberStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberStatusResponse{}

// MemberStatusResponse struct for MemberStatusResponse
type MemberStatusResponse struct {
	AggregatedAt NullableString `json:"aggregated_at,omitempty"`
	Challenges []ChallengeResponse `json:"challenges,omitempty"`
	ConnectionStatus NullableString `json:"connection_status,omitempty"`
	Guid NullableString `json:"guid,omitempty"`
	HasProcessedAccounts NullableBool `json:"has_processed_accounts,omitempty"`
	HasProcessedAccountNumbers NullableBool `json:"has_processed_account_numbers,omitempty"`
	HasProcessedTransactions NullableBool `json:"has_processed_transactions,omitempty"`
	IsAuthenticated NullableBool `json:"is_authenticated,omitempty"`
	IsBeingAggregated NullableBool `json:"is_being_aggregated,omitempty"`
	SuccessfullyAggregatedAt NullableString `json:"successfully_aggregated_at,omitempty"`
}

// NewMemberStatusResponse instantiates a new MemberStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberStatusResponse() *MemberStatusResponse {
	this := MemberStatusResponse{}
	return &this
}

// NewMemberStatusResponseWithDefaults instantiates a new MemberStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberStatusResponseWithDefaults() *MemberStatusResponse {
	this := MemberStatusResponse{}
	return &this
}

// GetAggregatedAt returns the AggregatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetAggregatedAt() string {
	if o == nil || IsNil(o.AggregatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.AggregatedAt.Get()
}

// GetAggregatedAtOk returns a tuple with the AggregatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetAggregatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatedAt.Get(), o.AggregatedAt.IsSet()
}

// HasAggregatedAt returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasAggregatedAt() bool {
	if o != nil && o.AggregatedAt.IsSet() {
		return true
	}

	return false
}

// SetAggregatedAt gets a reference to the given NullableString and assigns it to the AggregatedAt field.
func (o *MemberStatusResponse) SetAggregatedAt(v string) {
	o.AggregatedAt.Set(&v)
}
// SetAggregatedAtNil sets the value for AggregatedAt to be an explicit nil
func (o *MemberStatusResponse) SetAggregatedAtNil() {
	o.AggregatedAt.Set(nil)
}

// UnsetAggregatedAt ensures that no value is present for AggregatedAt, not even an explicit nil
func (o *MemberStatusResponse) UnsetAggregatedAt() {
	o.AggregatedAt.Unset()
}

// GetChallenges returns the Challenges field value if set, zero value otherwise.
func (o *MemberStatusResponse) GetChallenges() []ChallengeResponse {
	if o == nil || IsNil(o.Challenges) {
		var ret []ChallengeResponse
		return ret
	}
	return o.Challenges
}

// GetChallengesOk returns a tuple with the Challenges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberStatusResponse) GetChallengesOk() ([]ChallengeResponse, bool) {
	if o == nil || IsNil(o.Challenges) {
		return nil, false
	}
	return o.Challenges, true
}

// HasChallenges returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasChallenges() bool {
	if o != nil && !IsNil(o.Challenges) {
		return true
	}

	return false
}

// SetChallenges gets a reference to the given []ChallengeResponse and assigns it to the Challenges field.
func (o *MemberStatusResponse) SetChallenges(v []ChallengeResponse) {
	o.Challenges = v
}

// GetConnectionStatus returns the ConnectionStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetConnectionStatus() string {
	if o == nil || IsNil(o.ConnectionStatus.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectionStatus.Get()
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetConnectionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionStatus.Get(), o.ConnectionStatus.IsSet()
}

// HasConnectionStatus returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasConnectionStatus() bool {
	if o != nil && o.ConnectionStatus.IsSet() {
		return true
	}

	return false
}

// SetConnectionStatus gets a reference to the given NullableString and assigns it to the ConnectionStatus field.
func (o *MemberStatusResponse) SetConnectionStatus(v string) {
	o.ConnectionStatus.Set(&v)
}
// SetConnectionStatusNil sets the value for ConnectionStatus to be an explicit nil
func (o *MemberStatusResponse) SetConnectionStatusNil() {
	o.ConnectionStatus.Set(nil)
}

// UnsetConnectionStatus ensures that no value is present for ConnectionStatus, not even an explicit nil
func (o *MemberStatusResponse) UnsetConnectionStatus() {
	o.ConnectionStatus.Unset()
}

// GetGuid returns the Guid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetGuid() string {
	if o == nil || IsNil(o.Guid.Get()) {
		var ret string
		return ret
	}
	return *o.Guid.Get()
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Guid.Get(), o.Guid.IsSet()
}

// HasGuid returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasGuid() bool {
	if o != nil && o.Guid.IsSet() {
		return true
	}

	return false
}

// SetGuid gets a reference to the given NullableString and assigns it to the Guid field.
func (o *MemberStatusResponse) SetGuid(v string) {
	o.Guid.Set(&v)
}
// SetGuidNil sets the value for Guid to be an explicit nil
func (o *MemberStatusResponse) SetGuidNil() {
	o.Guid.Set(nil)
}

// UnsetGuid ensures that no value is present for Guid, not even an explicit nil
func (o *MemberStatusResponse) UnsetGuid() {
	o.Guid.Unset()
}

// GetHasProcessedAccounts returns the HasProcessedAccounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetHasProcessedAccounts() bool {
	if o == nil || IsNil(o.HasProcessedAccounts.Get()) {
		var ret bool
		return ret
	}
	return *o.HasProcessedAccounts.Get()
}

// GetHasProcessedAccountsOk returns a tuple with the HasProcessedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetHasProcessedAccountsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasProcessedAccounts.Get(), o.HasProcessedAccounts.IsSet()
}

// HasHasProcessedAccounts returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasHasProcessedAccounts() bool {
	if o != nil && o.HasProcessedAccounts.IsSet() {
		return true
	}

	return false
}

// SetHasProcessedAccounts gets a reference to the given NullableBool and assigns it to the HasProcessedAccounts field.
func (o *MemberStatusResponse) SetHasProcessedAccounts(v bool) {
	o.HasProcessedAccounts.Set(&v)
}
// SetHasProcessedAccountsNil sets the value for HasProcessedAccounts to be an explicit nil
func (o *MemberStatusResponse) SetHasProcessedAccountsNil() {
	o.HasProcessedAccounts.Set(nil)
}

// UnsetHasProcessedAccounts ensures that no value is present for HasProcessedAccounts, not even an explicit nil
func (o *MemberStatusResponse) UnsetHasProcessedAccounts() {
	o.HasProcessedAccounts.Unset()
}

// GetHasProcessedAccountNumbers returns the HasProcessedAccountNumbers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetHasProcessedAccountNumbers() bool {
	if o == nil || IsNil(o.HasProcessedAccountNumbers.Get()) {
		var ret bool
		return ret
	}
	return *o.HasProcessedAccountNumbers.Get()
}

// GetHasProcessedAccountNumbersOk returns a tuple with the HasProcessedAccountNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetHasProcessedAccountNumbersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasProcessedAccountNumbers.Get(), o.HasProcessedAccountNumbers.IsSet()
}

// HasHasProcessedAccountNumbers returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasHasProcessedAccountNumbers() bool {
	if o != nil && o.HasProcessedAccountNumbers.IsSet() {
		return true
	}

	return false
}

// SetHasProcessedAccountNumbers gets a reference to the given NullableBool and assigns it to the HasProcessedAccountNumbers field.
func (o *MemberStatusResponse) SetHasProcessedAccountNumbers(v bool) {
	o.HasProcessedAccountNumbers.Set(&v)
}
// SetHasProcessedAccountNumbersNil sets the value for HasProcessedAccountNumbers to be an explicit nil
func (o *MemberStatusResponse) SetHasProcessedAccountNumbersNil() {
	o.HasProcessedAccountNumbers.Set(nil)
}

// UnsetHasProcessedAccountNumbers ensures that no value is present for HasProcessedAccountNumbers, not even an explicit nil
func (o *MemberStatusResponse) UnsetHasProcessedAccountNumbers() {
	o.HasProcessedAccountNumbers.Unset()
}

// GetHasProcessedTransactions returns the HasProcessedTransactions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetHasProcessedTransactions() bool {
	if o == nil || IsNil(o.HasProcessedTransactions.Get()) {
		var ret bool
		return ret
	}
	return *o.HasProcessedTransactions.Get()
}

// GetHasProcessedTransactionsOk returns a tuple with the HasProcessedTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetHasProcessedTransactionsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasProcessedTransactions.Get(), o.HasProcessedTransactions.IsSet()
}

// HasHasProcessedTransactions returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasHasProcessedTransactions() bool {
	if o != nil && o.HasProcessedTransactions.IsSet() {
		return true
	}

	return false
}

// SetHasProcessedTransactions gets a reference to the given NullableBool and assigns it to the HasProcessedTransactions field.
func (o *MemberStatusResponse) SetHasProcessedTransactions(v bool) {
	o.HasProcessedTransactions.Set(&v)
}
// SetHasProcessedTransactionsNil sets the value for HasProcessedTransactions to be an explicit nil
func (o *MemberStatusResponse) SetHasProcessedTransactionsNil() {
	o.HasProcessedTransactions.Set(nil)
}

// UnsetHasProcessedTransactions ensures that no value is present for HasProcessedTransactions, not even an explicit nil
func (o *MemberStatusResponse) UnsetHasProcessedTransactions() {
	o.HasProcessedTransactions.Unset()
}

// GetIsAuthenticated returns the IsAuthenticated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetIsAuthenticated() bool {
	if o == nil || IsNil(o.IsAuthenticated.Get()) {
		var ret bool
		return ret
	}
	return *o.IsAuthenticated.Get()
}

// GetIsAuthenticatedOk returns a tuple with the IsAuthenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetIsAuthenticatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAuthenticated.Get(), o.IsAuthenticated.IsSet()
}

// HasIsAuthenticated returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasIsAuthenticated() bool {
	if o != nil && o.IsAuthenticated.IsSet() {
		return true
	}

	return false
}

// SetIsAuthenticated gets a reference to the given NullableBool and assigns it to the IsAuthenticated field.
func (o *MemberStatusResponse) SetIsAuthenticated(v bool) {
	o.IsAuthenticated.Set(&v)
}
// SetIsAuthenticatedNil sets the value for IsAuthenticated to be an explicit nil
func (o *MemberStatusResponse) SetIsAuthenticatedNil() {
	o.IsAuthenticated.Set(nil)
}

// UnsetIsAuthenticated ensures that no value is present for IsAuthenticated, not even an explicit nil
func (o *MemberStatusResponse) UnsetIsAuthenticated() {
	o.IsAuthenticated.Unset()
}

// GetIsBeingAggregated returns the IsBeingAggregated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetIsBeingAggregated() bool {
	if o == nil || IsNil(o.IsBeingAggregated.Get()) {
		var ret bool
		return ret
	}
	return *o.IsBeingAggregated.Get()
}

// GetIsBeingAggregatedOk returns a tuple with the IsBeingAggregated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetIsBeingAggregatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsBeingAggregated.Get(), o.IsBeingAggregated.IsSet()
}

// HasIsBeingAggregated returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasIsBeingAggregated() bool {
	if o != nil && o.IsBeingAggregated.IsSet() {
		return true
	}

	return false
}

// SetIsBeingAggregated gets a reference to the given NullableBool and assigns it to the IsBeingAggregated field.
func (o *MemberStatusResponse) SetIsBeingAggregated(v bool) {
	o.IsBeingAggregated.Set(&v)
}
// SetIsBeingAggregatedNil sets the value for IsBeingAggregated to be an explicit nil
func (o *MemberStatusResponse) SetIsBeingAggregatedNil() {
	o.IsBeingAggregated.Set(nil)
}

// UnsetIsBeingAggregated ensures that no value is present for IsBeingAggregated, not even an explicit nil
func (o *MemberStatusResponse) UnsetIsBeingAggregated() {
	o.IsBeingAggregated.Unset()
}

// GetSuccessfullyAggregatedAt returns the SuccessfullyAggregatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberStatusResponse) GetSuccessfullyAggregatedAt() string {
	if o == nil || IsNil(o.SuccessfullyAggregatedAt.Get()) {
		var ret string
		return ret
	}
	return *o.SuccessfullyAggregatedAt.Get()
}

// GetSuccessfullyAggregatedAtOk returns a tuple with the SuccessfullyAggregatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberStatusResponse) GetSuccessfullyAggregatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuccessfullyAggregatedAt.Get(), o.SuccessfullyAggregatedAt.IsSet()
}

// HasSuccessfullyAggregatedAt returns a boolean if a field has been set.
func (o *MemberStatusResponse) HasSuccessfullyAggregatedAt() bool {
	if o != nil && o.SuccessfullyAggregatedAt.IsSet() {
		return true
	}

	return false
}

// SetSuccessfullyAggregatedAt gets a reference to the given NullableString and assigns it to the SuccessfullyAggregatedAt field.
func (o *MemberStatusResponse) SetSuccessfullyAggregatedAt(v string) {
	o.SuccessfullyAggregatedAt.Set(&v)
}
// SetSuccessfullyAggregatedAtNil sets the value for SuccessfullyAggregatedAt to be an explicit nil
func (o *MemberStatusResponse) SetSuccessfullyAggregatedAtNil() {
	o.SuccessfullyAggregatedAt.Set(nil)
}

// UnsetSuccessfullyAggregatedAt ensures that no value is present for SuccessfullyAggregatedAt, not even an explicit nil
func (o *MemberStatusResponse) UnsetSuccessfullyAggregatedAt() {
	o.SuccessfullyAggregatedAt.Unset()
}

func (o MemberStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AggregatedAt.IsSet() {
		toSerialize["aggregated_at"] = o.AggregatedAt.Get()
	}
	if !IsNil(o.Challenges) {
		toSerialize["challenges"] = o.Challenges
	}
	if o.ConnectionStatus.IsSet() {
		toSerialize["connection_status"] = o.ConnectionStatus.Get()
	}
	if o.Guid.IsSet() {
		toSerialize["guid"] = o.Guid.Get()
	}
	if o.HasProcessedAccounts.IsSet() {
		toSerialize["has_processed_accounts"] = o.HasProcessedAccounts.Get()
	}
	if o.HasProcessedAccountNumbers.IsSet() {
		toSerialize["has_processed_account_numbers"] = o.HasProcessedAccountNumbers.Get()
	}
	if o.HasProcessedTransactions.IsSet() {
		toSerialize["has_processed_transactions"] = o.HasProcessedTransactions.Get()
	}
	if o.IsAuthenticated.IsSet() {
		toSerialize["is_authenticated"] = o.IsAuthenticated.Get()
	}
	if o.IsBeingAggregated.IsSet() {
		toSerialize["is_being_aggregated"] = o.IsBeingAggregated.Get()
	}
	if o.SuccessfullyAggregatedAt.IsSet() {
		toSerialize["successfully_aggregated_at"] = o.SuccessfullyAggregatedAt.Get()
	}
	return toSerialize, nil
}

type NullableMemberStatusResponse struct {
	value *MemberStatusResponse
	isSet bool
}

func (v NullableMemberStatusResponse) Get() *MemberStatusResponse {
	return v.value
}

func (v *NullableMemberStatusResponse) Set(val *MemberStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberStatusResponse(val *MemberStatusResponse) *NullableMemberStatusResponse {
	return &NullableMemberStatusResponse{value: val, isSet: true}
}

func (v NullableMemberStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


