/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the MonthlyCashFlowResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonthlyCashFlowResponse{}

// MonthlyCashFlowResponse struct for MonthlyCashFlowResponse
type MonthlyCashFlowResponse struct {
	// Unique identifier for the monthly cash flow profile. Defined by MX.
	Guid *string `json:"guid,omitempty"`
	// Unique identifier for the user the monthly cash flow profile is attached to. Defined by MX.
	UserGuid *string `json:"user_guid,omitempty"`
	// The amount of the budgeted income for the user.
	BudgetedIncome *float32 `json:"budgeted_income,omitempty"`
	// The amount of the budgeted expenses for the user.
	BudgetedExpenses *float32 `json:"budgeted_expenses,omitempty"`
	// The monthly dollar amount allocated for goals.
	GoalsContribution *float32 `json:"goals_contribution,omitempty"`
	// The estimated monthly dollar amount allocated for goals calculated from income and budgets.
	EstimatedGoalsContribution *int32 `json:"estimated_goals_contribution,omitempty"`
	UsesEstimatedGoalsContribution *bool `json:"uses_estimated_goals_contribution,omitempty"`
}

// NewMonthlyCashFlowResponse instantiates a new MonthlyCashFlowResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonthlyCashFlowResponse() *MonthlyCashFlowResponse {
	this := MonthlyCashFlowResponse{}
	return &this
}

// NewMonthlyCashFlowResponseWithDefaults instantiates a new MonthlyCashFlowResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonthlyCashFlowResponseWithDefaults() *MonthlyCashFlowResponse {
	this := MonthlyCashFlowResponse{}
	return &this
}

// GetGuid returns the Guid field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetGuid() string {
	if o == nil || IsNil(o.Guid) {
		var ret string
		return ret
	}
	return *o.Guid
}

// GetGuidOk returns a tuple with the Guid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetGuidOk() (*string, bool) {
	if o == nil || IsNil(o.Guid) {
		return nil, false
	}
	return o.Guid, true
}

// HasGuid returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasGuid() bool {
	if o != nil && !IsNil(o.Guid) {
		return true
	}

	return false
}

// SetGuid gets a reference to the given string and assigns it to the Guid field.
func (o *MonthlyCashFlowResponse) SetGuid(v string) {
	o.Guid = &v
}

// GetUserGuid returns the UserGuid field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetUserGuid() string {
	if o == nil || IsNil(o.UserGuid) {
		var ret string
		return ret
	}
	return *o.UserGuid
}

// GetUserGuidOk returns a tuple with the UserGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetUserGuidOk() (*string, bool) {
	if o == nil || IsNil(o.UserGuid) {
		return nil, false
	}
	return o.UserGuid, true
}

// HasUserGuid returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasUserGuid() bool {
	if o != nil && !IsNil(o.UserGuid) {
		return true
	}

	return false
}

// SetUserGuid gets a reference to the given string and assigns it to the UserGuid field.
func (o *MonthlyCashFlowResponse) SetUserGuid(v string) {
	o.UserGuid = &v
}

// GetBudgetedIncome returns the BudgetedIncome field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetBudgetedIncome() float32 {
	if o == nil || IsNil(o.BudgetedIncome) {
		var ret float32
		return ret
	}
	return *o.BudgetedIncome
}

// GetBudgetedIncomeOk returns a tuple with the BudgetedIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetBudgetedIncomeOk() (*float32, bool) {
	if o == nil || IsNil(o.BudgetedIncome) {
		return nil, false
	}
	return o.BudgetedIncome, true
}

// HasBudgetedIncome returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasBudgetedIncome() bool {
	if o != nil && !IsNil(o.BudgetedIncome) {
		return true
	}

	return false
}

// SetBudgetedIncome gets a reference to the given float32 and assigns it to the BudgetedIncome field.
func (o *MonthlyCashFlowResponse) SetBudgetedIncome(v float32) {
	o.BudgetedIncome = &v
}

// GetBudgetedExpenses returns the BudgetedExpenses field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetBudgetedExpenses() float32 {
	if o == nil || IsNil(o.BudgetedExpenses) {
		var ret float32
		return ret
	}
	return *o.BudgetedExpenses
}

// GetBudgetedExpensesOk returns a tuple with the BudgetedExpenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetBudgetedExpensesOk() (*float32, bool) {
	if o == nil || IsNil(o.BudgetedExpenses) {
		return nil, false
	}
	return o.BudgetedExpenses, true
}

// HasBudgetedExpenses returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasBudgetedExpenses() bool {
	if o != nil && !IsNil(o.BudgetedExpenses) {
		return true
	}

	return false
}

// SetBudgetedExpenses gets a reference to the given float32 and assigns it to the BudgetedExpenses field.
func (o *MonthlyCashFlowResponse) SetBudgetedExpenses(v float32) {
	o.BudgetedExpenses = &v
}

// GetGoalsContribution returns the GoalsContribution field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetGoalsContribution() float32 {
	if o == nil || IsNil(o.GoalsContribution) {
		var ret float32
		return ret
	}
	return *o.GoalsContribution
}

// GetGoalsContributionOk returns a tuple with the GoalsContribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetGoalsContributionOk() (*float32, bool) {
	if o == nil || IsNil(o.GoalsContribution) {
		return nil, false
	}
	return o.GoalsContribution, true
}

// HasGoalsContribution returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasGoalsContribution() bool {
	if o != nil && !IsNil(o.GoalsContribution) {
		return true
	}

	return false
}

// SetGoalsContribution gets a reference to the given float32 and assigns it to the GoalsContribution field.
func (o *MonthlyCashFlowResponse) SetGoalsContribution(v float32) {
	o.GoalsContribution = &v
}

// GetEstimatedGoalsContribution returns the EstimatedGoalsContribution field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetEstimatedGoalsContribution() int32 {
	if o == nil || IsNil(o.EstimatedGoalsContribution) {
		var ret int32
		return ret
	}
	return *o.EstimatedGoalsContribution
}

// GetEstimatedGoalsContributionOk returns a tuple with the EstimatedGoalsContribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetEstimatedGoalsContributionOk() (*int32, bool) {
	if o == nil || IsNil(o.EstimatedGoalsContribution) {
		return nil, false
	}
	return o.EstimatedGoalsContribution, true
}

// HasEstimatedGoalsContribution returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasEstimatedGoalsContribution() bool {
	if o != nil && !IsNil(o.EstimatedGoalsContribution) {
		return true
	}

	return false
}

// SetEstimatedGoalsContribution gets a reference to the given int32 and assigns it to the EstimatedGoalsContribution field.
func (o *MonthlyCashFlowResponse) SetEstimatedGoalsContribution(v int32) {
	o.EstimatedGoalsContribution = &v
}

// GetUsesEstimatedGoalsContribution returns the UsesEstimatedGoalsContribution field value if set, zero value otherwise.
func (o *MonthlyCashFlowResponse) GetUsesEstimatedGoalsContribution() bool {
	if o == nil || IsNil(o.UsesEstimatedGoalsContribution) {
		var ret bool
		return ret
	}
	return *o.UsesEstimatedGoalsContribution
}

// GetUsesEstimatedGoalsContributionOk returns a tuple with the UsesEstimatedGoalsContribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyCashFlowResponse) GetUsesEstimatedGoalsContributionOk() (*bool, bool) {
	if o == nil || IsNil(o.UsesEstimatedGoalsContribution) {
		return nil, false
	}
	return o.UsesEstimatedGoalsContribution, true
}

// HasUsesEstimatedGoalsContribution returns a boolean if a field has been set.
func (o *MonthlyCashFlowResponse) HasUsesEstimatedGoalsContribution() bool {
	if o != nil && !IsNil(o.UsesEstimatedGoalsContribution) {
		return true
	}

	return false
}

// SetUsesEstimatedGoalsContribution gets a reference to the given bool and assigns it to the UsesEstimatedGoalsContribution field.
func (o *MonthlyCashFlowResponse) SetUsesEstimatedGoalsContribution(v bool) {
	o.UsesEstimatedGoalsContribution = &v
}

func (o MonthlyCashFlowResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonthlyCashFlowResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Guid) {
		toSerialize["guid"] = o.Guid
	}
	if !IsNil(o.UserGuid) {
		toSerialize["user_guid"] = o.UserGuid
	}
	if !IsNil(o.BudgetedIncome) {
		toSerialize["budgeted_income"] = o.BudgetedIncome
	}
	if !IsNil(o.BudgetedExpenses) {
		toSerialize["budgeted_expenses"] = o.BudgetedExpenses
	}
	if !IsNil(o.GoalsContribution) {
		toSerialize["goals_contribution"] = o.GoalsContribution
	}
	if !IsNil(o.EstimatedGoalsContribution) {
		toSerialize["estimated_goals_contribution"] = o.EstimatedGoalsContribution
	}
	if !IsNil(o.UsesEstimatedGoalsContribution) {
		toSerialize["uses_estimated_goals_contribution"] = o.UsesEstimatedGoalsContribution
	}
	return toSerialize, nil
}

type NullableMonthlyCashFlowResponse struct {
	value *MonthlyCashFlowResponse
	isSet bool
}

func (v NullableMonthlyCashFlowResponse) Get() *MonthlyCashFlowResponse {
	return v.value
}

func (v *NullableMonthlyCashFlowResponse) Set(val *MonthlyCashFlowResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMonthlyCashFlowResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMonthlyCashFlowResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonthlyCashFlowResponse(val *MonthlyCashFlowResponse) *NullableMonthlyCashFlowResponse {
	return &NullableMonthlyCashFlowResponse{value: val, isSet: true}
}

func (v NullableMonthlyCashFlowResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonthlyCashFlowResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


