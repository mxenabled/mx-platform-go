/*
MX Platform API

The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mxplatformgo

import (
	"encoding/json"
)

// checks if the GoalsResponseBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoalsResponseBody{}

// GoalsResponseBody struct for GoalsResponseBody
type GoalsResponseBody struct {
	Goals []GoalsResponse `json:"goals,omitempty"`
	Pagination *PaginationResponse `json:"pagination,omitempty"`
}

// NewGoalsResponseBody instantiates a new GoalsResponseBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoalsResponseBody() *GoalsResponseBody {
	this := GoalsResponseBody{}
	return &this
}

// NewGoalsResponseBodyWithDefaults instantiates a new GoalsResponseBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoalsResponseBodyWithDefaults() *GoalsResponseBody {
	this := GoalsResponseBody{}
	return &this
}

// GetGoals returns the Goals field value if set, zero value otherwise.
func (o *GoalsResponseBody) GetGoals() []GoalsResponse {
	if o == nil || IsNil(o.Goals) {
		var ret []GoalsResponse
		return ret
	}
	return o.Goals
}

// GetGoalsOk returns a tuple with the Goals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalsResponseBody) GetGoalsOk() ([]GoalsResponse, bool) {
	if o == nil || IsNil(o.Goals) {
		return nil, false
	}
	return o.Goals, true
}

// HasGoals returns a boolean if a field has been set.
func (o *GoalsResponseBody) HasGoals() bool {
	if o != nil && !IsNil(o.Goals) {
		return true
	}

	return false
}

// SetGoals gets a reference to the given []GoalsResponse and assigns it to the Goals field.
func (o *GoalsResponseBody) SetGoals(v []GoalsResponse) {
	o.Goals = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GoalsResponseBody) GetPagination() PaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret PaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalsResponseBody) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GoalsResponseBody) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationResponse and assigns it to the Pagination field.
func (o *GoalsResponseBody) SetPagination(v PaginationResponse) {
	o.Pagination = &v
}

func (o GoalsResponseBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoalsResponseBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Goals) {
		toSerialize["goals"] = o.Goals
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableGoalsResponseBody struct {
	value *GoalsResponseBody
	isSet bool
}

func (v NullableGoalsResponseBody) Get() *GoalsResponseBody {
	return v.value
}

func (v *NullableGoalsResponseBody) Set(val *GoalsResponseBody) {
	v.value = val
	v.isSet = true
}

func (v NullableGoalsResponseBody) IsSet() bool {
	return v.isSet
}

func (v *NullableGoalsResponseBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoalsResponseBody(val *GoalsResponseBody) *NullableGoalsResponseBody {
	return &NullableGoalsResponseBody{value: val, isSet: true}
}

func (v NullableGoalsResponseBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoalsResponseBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


